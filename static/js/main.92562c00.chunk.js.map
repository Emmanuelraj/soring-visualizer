{"version":3,"sources":["components/HeaderComponent.js","Context/SortingContext.js","Context/ArraySizeContext.js","components/Modal.js","components/GenerateArray.js","components/ChangeArraySize.js","components/colorSortAlgoMap.js","components/SortingAlgorithim.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderComponent","react_default","a","createElement","className","SortingContext","createContext","ArraySizeContext","Modal","_ref","sortAlgoType","_useState","useState","_useState2","Object","slicedToArray","showModal","setShowModal","timeComplexityMap","Map","spaceComplexityMap","ideaMap","timeComplexity","get","console","log","spaceComplexity","Fragment","id","onClick","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","GenerateArray","useContext","end","setEnd","_useState3","_useState4","start","setStart","_useState5","_useState6","flag","setFlag","_useState7","_useState8","items","setItems","_useState9","Array","fill","_useState10","colors","setColors","_useState11","_useState12","setDisabled","_useState13","_useState14","enableSortBtn","setEnableSortBtn","_useState15","_useState16","showModalFlag","setShowModalFlag","_useContext","selectedSortAlgo","colorSortAlgoMap","useEffect","setAllStatus","newColors","toConsumableArray","bubbleSort","asyncToGenerator","_callee","e","k","l","_context","setTimeout","_x","apply","arguments","mergeSort","_ref2","_callee2","low","high","middle","_context2","Math","floor","merge","_x2","_x3","_x4","left","right","j","prevItems","concat","random","components_Modal","map","item","index","style","height","width","backgroundColor","ChangeArraySize","setValue","Provider","min","max","defaultValue","onChange","target","components_GenerateArray","SortingAlgorithim","sortAlgos","sortTypes","setSelectedSortAlgo","sortAlgo","disabled","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.92562c00.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\n\r\nexport default function HeaderComponent() {\r\n  return (\r\n    <div>\r\n        <header className=\"App-header\">\r\n        <p>\r\n          Sorting Visualizer\r\n        </p>  \r\n     </header>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import { createContext } from 'react';\r\n\r\n// Create the context\r\nexport const SortingContext = createContext();","import { createContext } from 'react';\r\n\r\n// Create the context\r\nexport const ArraySizeContext = createContext();","import React, { useState } from 'react';\r\n\r\nfunction Modal({sortAlgoType}) {\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleClose = () => setShowModal(false);\r\n  const handleShow = () => setShowModal(true);\r\n\r\n\r\n  const timeComplexityMap = new Map([\r\n    [\"Merge Sort\", \"O(n log n)\"],\r\n    [\"Quick Sort\", \"blue\"],\r\n    [\"Bubble Sort\", \"O(n^2)\"]\r\n]);\r\n\r\nconst spaceComplexityMap = new Map([\r\n  [\"Merge Sort\", \"O(n)\"],\r\n  [\"Quick Sort\", \"blue\"],\r\n  [\"Bubble Sort\", \"O(n)\"]\r\n]);\r\n\r\n\r\n\r\nconst ideaMap = new Map([\r\n  [\"Merge Sort\",  \"Divide and conquer Algorthim technique call recursively divide and sort\"],\r\n  [\"Quick Sort\",  \"Divide and Conquer Algo take pivot as last element \"],\r\n  [\"Bubble Sort\", \"Take larger element to the end by repeatedly swapping the adjacent elements\"]\r\n]);\r\n\r\nconst timeComplexity = timeComplexityMap.get(sortAlgoType);\r\nconsole.log(timeComplexity); // \"o(n^2)\"\r\n\r\nconst spaceComplexity = spaceComplexityMap.get(sortAlgoType);\r\nconsole.log(spaceComplexity);\r\n\r\n\r\n  \r\n  console.log(sortAlgoType)\r\n  return (\r\n    <>\r\n      <button id=\"generate_random_arr\" onClick={handleShow}>Show Modal</button>\r\n      {showModal && (\r\n        <div  className=\"modal-container\">\r\n        <div className=\"modal-content\">\r\n          <div>Time Complexity for {sortAlgoType} : {timeComplexity}</div>\r\n          <div> Space Complexity for {sortAlgoType} : {spaceComplexity}</div>\r\n          <div> Idea for {sortAlgoType} : {ideaMap.get(sortAlgoType)} </div>\r\n          <button id=\"generate_random_arr\" onClick={handleClose}>Close</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Modal;","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ArraySizeContext } from \"../Context/ArraySizeContext\";\r\nimport { SortingContext } from \"../Context/SortingContext\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst GenerateArray = () => {\r\n  const value = useContext(ArraySizeContext);\r\n  const [end, setEnd] = useState(value);\r\n  const [start, setStart] = useState(1);\r\n  const [flag, setFlag] = useState(false);\r\n  const [items, setItems] = useState([end]);\r\n  const [colors, setColors] = useState(Array(setItems.length).fill(\"purple\"));\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [enableSortBtn, setEnableSortBtn] = useState(false);\r\n  const [showModalFlag, setShowModalFlag] = useState(false);\r\n\r\n  const { selectedSortAlgo, colorSortAlgoMap } = useContext(SortingContext);\r\n\r\n  useEffect(() => {\r\n    console.log(selectedSortAlgo, colorSortAlgoMap);\r\n    if (selectedSortAlgo) {\r\n      console.log(\"Selected Sort Algorithm: \", selectedSortAlgo);\r\n    }\r\n  }, [selectedSortAlgo]);\r\n\r\n  useEffect(() => {\r\n    // Similar component componentDidMount we need when scroll bar updated\r\n    console.log(\"useEffect\" + value);\r\n    setEnd(value);\r\n  }, [value]);\r\n\r\n  const resetSize = () => {\r\n    console.log(\"resetSize\");\r\n    setItems([]);\r\n    setStart(1);\r\n    if (selectedSortAlgo) {\r\n      setEnableSortBtn(true);\r\n    }\r\n  };\r\n\r\n  const setAllStatus = () => {\r\n    let newColors = [...colors];\r\n    console.log(colorSortAlgoMap.get(selectedSortAlgo));\r\n    setColors(newColors);\r\n    setEnableSortBtn(false);\r\n    setShowModalFlag(false);\r\n  };\r\n\r\n  const bubbleSort = async (e) => {\r\n    for (var k = 0; k < items.length; k++) {\r\n      for (var l = 0; l < items.length - 1 - k; l++) {\r\n        console.log(\"bubble Sort\");\r\n        await new Promise((resolve) => setTimeout(resolve, 2000));\r\n        if (items[l] > items[l + 1]) {\r\n          var val = items[l + 1];\r\n          items[l + 1] = items[l];\r\n          items[l] = val;\r\n          let newColors = [...colors];\r\n          newColors[l] = \"red\";\r\n          newColors[l + 1] = \"red\";\r\n          setColors(newColors);\r\n        }\r\n      }\r\n    }\r\n\r\n    setAllStatus();\r\n  };\r\n  /**\r\n  handleSorting ()\r\n  {\r\n       for(let i =0;i<items.length;i++)\r\n       {\r\n         await new Promise(resolve => setTimeout(resolve, 1000));  // await new Promise\r\n         console.log(`Item at index  is ${items[i]}`, 'hello'); \r\n         let newColors = [...colors];\r\n        newColors[i] = \"red\";\r\n        setColors(newColors);\r\n       }\r\n  } */\r\n\r\n  const handleSorting = (e) => {\r\n    console.log(\"handleSort\" + selectedSortAlgo);\r\n    if (selectedSortAlgo === \"Bubble Sort\") {\r\n      setDisabled(true);\r\n      setEnableSortBtn(true);\r\n      bubbleSort();\r\n      setTimeout(() => {\r\n        setShowModalFlag(true);\r\n      }, 2000);\r\n      setShowModalFlag(false);\r\n      console.log(showModalFlag);\r\n    } else if (selectedSortAlgo === \"Merge Sort\") {\r\n      let low = 0;\r\n      let high = items.length - 1;\r\n      mergeSort(items, low, high);\r\n      setTimeout(() => {\r\n        setShowModalFlag(true);\r\n      }, 2000);\r\n      setShowModalFlag(false);\r\n      console.log(showModalFlag);\r\n    } else if (selectedSortAlgo === \"Quick Sort\") {\r\n      // Divide and conquer method \r\n      \r\n    }\r\n  };\r\n\r\n  const mergeSort = async (items, low, high) => {\r\n    let newColors = [...colors];\r\n    if (low < high) {\r\n      let middle = Math.floor((low + high) / 2);\r\n      newColors[low] = \"green\";\r\n      newColors[middle] = \"green\";\r\n      mergeSort(items, low, middle);\r\n      //\r\n\r\n      mergeSort(items, middle + 1, high);\r\n      newColors[middle + 1] = \"green\";\r\n      newColors[high] = \"green\";\r\n\r\n      merge(items, low, middle, high);\r\n      await new Promise((resolve) => setTimeout(resolve, 2000)); // await new Promise\r\n      setAllStatus();\r\n    }\r\n  };\r\n\r\n  const merge = (items, low, middle, high) => {\r\n    let left = items.slice(low, middle + 1);\r\n    let right = items.slice(middle + 1, high + 1);\r\n    let i = 0;\r\n    let j = 0;\r\n    let k = low;\r\n    let newColors = [...colors];\r\n\r\n    while (i < left.length && j < right.length) {\r\n      if (left[i] <= right[j]) {\r\n        items[k] = left[i];\r\n        newColors[k] = \"green\";\r\n\r\n        i++;\r\n        newColors[i] = \"red\";\r\n        setColors(newColors);\r\n      } else {\r\n        items[k] = right[j];\r\n        newColors[k] = \"green\";\r\n        j++;\r\n        newColors[j] = \"green\";\r\n        setColors(newColors);\r\n      }\r\n      k++;\r\n    }\r\n    while (i < left.length) {\r\n      items[k] = left[i];\r\n      i++;\r\n      k++;\r\n    }\r\n    while (j < right.length) {\r\n      items[k] = right[j];\r\n\r\n      j++;\r\n      newColors[j] = \"green\";\r\n      k++;\r\n      newColors[k] = \"green\";\r\n      setColors(newColors);\r\n    }\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    let newColors = Array(items.length).fill(\"purple\");\r\n    setColors(newColors);\r\n    resetSize();\r\n    console.log(end);\r\n    for (var i = 0; i < end; i++) {\r\n      setItems((prevItems) => [\r\n        ...prevItems,\r\n        Math.floor(Math.random() * (end - start + 1) + start),\r\n      ]);\r\n    }\r\n    console.log(items);\r\n    setFlag(true);\r\n    setShowModalFlag(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"container\">\r\n        <button id=\"generate_random_arr\" onClick={handleClick}>\r\n          GenerateArray\r\n        </button>\r\n        {enableSortBtn && (\r\n          <button id=\"generate_random_arr\" onClick={handleSorting}>\r\n            {selectedSortAlgo + \"\" + \"!\"}\r\n          </button>\r\n        )}\r\n        <div>\r\n          {showModalFlag && (\r\n            <Modal flag={showModalFlag} sortAlgoType={selectedSortAlgo} />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"seperate-container\">\r\n        {flag && (\r\n          <div className=\"chart\">\r\n            {items.map((item, index) => (\r\n              <div\r\n                id=\"bar\"\r\n                style={{\r\n                  height: `${item * 2}vh`,\r\n                  width: \"100px\",\r\n                  backgroundColor: colors[index],\r\n                }}\r\n                key={index}\r\n              >\r\n                {item}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenerateArray;\r\n","import React, { useState } from \"react\";\r\nimport { ArraySizeContext } from \"../Context/ArraySizeContext\";\r\nimport GenerateArray from \"./GenerateArray\";\r\n\r\nexport default function ChangeArraySize() {\r\n\r\n  const [value, setValue] = useState(5);\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n    console.log(\"changeArraySize\" + value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <div id=\"generate-array\">\r\n        <GenerateArray value = {value}/>\r\n      </div> */}\r\n      <ArraySizeContext.Provider value={value}>\r\n        <div id=\"toolbar\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"5\"\r\n            max=\"31\"\r\n            defaultValue={value}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div></div>\r\n        <div id=\"generate-array\">\r\n          <GenerateArray/>\r\n        </div>\r\n      </ArraySizeContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n","const colorSortAlgoMap = new Map([\r\n    [\"Merge Sort\", \"red\"],\r\n    [\"Quick Sort\", \"blue\"],\r\n    [\"Bubble Sort\", \"green\"]\r\n]);\r\n\r\nexport default colorSortAlgoMap;\r\n","import React, { useState } from \"react\";\r\nimport { SortingContext } from \"../Context/SortingContext\";\r\nimport ChangeArraySize from \"./ChangeArraySize\";\r\nimport colorSortAlgoMap from './colorSortAlgoMap'\r\n\r\nexport default function SortingAlgorithim() {\r\n  \r\n  const [sortAlgos, setSortAlgos] = useState([\r\n    \"Merge Sort\",\r\n    \"Bubble Sort\",\r\n  ]);\r\n\r\n  \r\n\r\n  const [flag, setFlag] = useState(false);\r\n  const [sortTypes, setSortTypes] = useState(true);\r\n  const [selectedSortAlgo, setSelectedSortAlgo] = useState(\"Bubble Sort\");\r\n\r\n  const handleClick = (e) => {\r\n    setSelectedSortAlgo(sortAlgos[e]);\r\n    setFlag(true);\r\n  };\r\n\r\n  const handleClickFn = (e) => {\r\n    console.log(\"selected\", selectedSortAlgo);\r\n  };\r\n\r\n  return (\r\n    <SortingContext.Provider value={{selectedSortAlgo, colorSortAlgoMap}}>\r\n      <div>\r\n        {sortTypes && (\r\n          <div id=\"sorting-container\">\r\n            {sortAlgos.map((sortAlgo, index) => (\r\n              <div key={index} id=\"sort\">\r\n                <button\r\n                  onClick={() => {\r\n                    handleClick(index);\r\n                  }}\r\n                >\r\n                  {sortAlgo}\r\n                </button>{\" \"}\r\n                {/*** not every time it will be call unless click it won't fire the fn i.e anonymous fn */}\r\n              </div>\r\n            ))}\r\n            {flag && (\r\n              <div\r\n                disabled={true}\r\n                onClick={() => {\r\n                  handleClickFn();\r\n                }}\r\n              >\r\n                Sort !\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}     \r\n\r\n      </div>\r\n      <ChangeArraySize/>     \r\n    </SortingContext.Provider>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport React from \"react\";\nimport HeaderComponent from \"./components/HeaderComponent\";\nimport SortingAlgorithim from \"./components/SortingAlgorithim\";\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <HeaderComponent/>\n      <SortingAlgorithim/>\n    </div>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}